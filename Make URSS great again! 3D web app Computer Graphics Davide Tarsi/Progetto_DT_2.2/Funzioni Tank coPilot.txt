function tankDoStep(){
    
    // calcolo il nuovo stato interno
    // (mozzoA, mozzoP, sterzo)
    tankDoControl();
    
    // calcolo la nuova velocita'
    // (vx, vy, vz)
    tankDoMove();
    
    // calcolo la nuova posizione
    // (px, py, pz, facing)
    tankDoPosition();
    
    // aggiorno la posizione della camera
    cameraDoStep();
}   

//-------------------FUNZIONE DO CONTROL-------------------//

function tankDoControl(){
    // calcolo il nuovo stato interno
    // (mozzoA, mozzoP, sterzo)
    
    // sterzo
    if (key[0]) sterzo = sterzo + velSterzo; // W
    if (key[1]) sterzo = sterzo - velSterzo; // A
    sterzo = sterzo * velRitornoSterzo; // ritorno a zero
    
    // ruote anteriori
    if (key[2]) mozzoA = mozzoA + velSterzo; // S
    if (key[3]) mozzoA = mozzoA - velSterzo; // D
    mozzoA = mozzoA * velRitornoSterzo; // ritorno a zero
    
    // ruote posteriori
    mozzoP = mozzoA - sterzo;
}

//-------------------FUNZIONE DO MOVE-------------------//

function tankDoMove(){
    // calcolo la nuova velocita'
    // (vx, vy, vz)
    
    // ruote anteriori
    var accA = accMax * Math.sin(mozzoA);
    var accP = accMax * Math.sin(mozzoP);
    
    // accelerazione
    var accX = accA * Math.cos(facing) + accP * Math.cos(facing+Math.PI);
    var accZ = accA * Math.sin(facing) + accP * Math.sin(facing+Math.PI);
    
    // velocita'
    vx = vx + accX;
    vz = vz + accZ;
    
    // attriti
    vx = vx * attritoX;
    vy = vy * attritoY;
    vz = vz * attritoZ;
}

//-------------------FUNZIONE DO POSITION-------------------//

function tankDoPosition(){
    // calcolo la nuova posizione
    // (px, py, pz, facing)
    
    // posizione
    px = px + vx;
    py = py + vy;
    pz = pz + vz;
    
    // orientamento
    facing = facing + sterzo * grip;
}   

//-------------------FUNZIONE DO KEY DOWN-------------------//

function tankDoKeyDown(e){
    // gestione tasti premuti
    // (key)
    switch (e.keyCode){
        case 87: key[0]=true; break; // W
        case 65: key[1]=true; break; // A
        case 83: key[2]=true; break; // S
        case 68: key[3]=true; break; // D
        case 32: key[4]=true; break; // SPACE
    }
}

//-------------------FUNZIONE DO KEY UP

function tankDoKeyUp(e){    
    // gestione tasti rilasciati
    // (key)
    switch (e.keyCode){
        case 87: key[0]=false; break; // W
        case 65: key[1]=false; break; // A
        case 83: key[2]=false; break; // S
        case 68: key[3]=false; break; // D
        case 32: key[4]=false; break; // SPACE
    }
}

//-------------------FUNZIONE DO MOUSE MOVE-------------------//

function tankDoMouseMove(e){
    // gestione movimento del mouse
    // (mouseX, mouseY)
    mouseX = e.clientX
    mouseY = e.clientY
}

//-------------------FUNZIONE DO MOUSE DOWN-------------------//

function tankDoMouseDown(e){
    // gestione click del mouse
    // (mouseX, mouseY)
    mouseX = e.clientX
    mouseY = e.clientY
}

//-------------------FUNZIONE DO MOUSE UP-------------------//

function tankDoMouseUp(e){
    // gestione rilascio click del mouse
    // (mouseX, mouseY)
    mouseX = e.clientX
    mouseY = e.clientY
}

//-------------------FUNZIONE DO MOUSE WHEEL-------------------//

function tankDoMouseWheel(e){
    // gestione rotellina del mouse
    // (mouseWheel)
    mouseWheel = e.wheelDelta
}

//-------------------FUNZIONE DO TOUCH START-------------------//

function tankDoTouchStart(e){
    // gestione touch
    // (mouseX, mouseY)
    mouseX = e.touches[0].clientX
    mouseY = e.touches[0].clientY
}

//-------------------FUNZIONE DO TOUCH MOVE-------------------//

function tankDoTouchMove(e){
    // gestione touch
    // (mouseX, mouseY)
    mouseX = e.touches[0].clientX
    mouseY = e.touches[0].clientY
}

//-------------------FUNZIONE DO TOUCH END-------------------//

function tankDoTouchEnd(e){
    // gestione touch
    // (mouseX, mouseY)
    mouseX = e.touches[0].clientX
    mouseY = e.touches[0].clientY
}

//-------------------FUNZIONE DO TOUCH CANCEL-------------------//

function tankDoTouchCancel(e){
    // gestione touch
    // (mouseX, mouseY)
    mouseX = e.touches[0].clientX
    mouseY = e.touches[0].clientY
}

//-------------------FUNZIONE DO ORIENTATION-------------------//

function tankDoOrientation(e){
    // gestione orientamento del dispositivo
    // (alpha, beta, gamma)
    alpha = e.alpha
    beta = e.beta
    gamma = e.gamma
}

//-------------------FUNZIONE DO ACCELERATION-------------------//

function tankDoAcceleration(e){
    // gestione accelerazione del dispositivo
    // (accX, accY, accZ)
    accX = e.accelerationIncludingGravity.x
    accY = e.accelerationIncludingGravity.y
    accZ = e.accelerationIncludingGravity.z
}

//-------------------FUNZIONE DO RENDER-------------------//

function tankDoRender(){
    // disegno il tank
    // (px, py, pz, facing)
    
    // disegno il tank
    tankDraw();
    
    // disegno il terreno
    groundDraw();
}

//-------------------FUNZIONE DO LOOP-------------------//

function tankDoLoop(){
    // loop del gioco
    
    // gestione input
    tankDoInput();
    
    // calcolo fisica
    tankDoPhysics();
    
    // disegno
    tankDoRender();
    
    // loop
    requestAnimationFrame(tankDoLoop);
}

//-------------------FUNZIONE DO INPUT-------------------//

function tankDoInput(){
    // gestione input
    // (key, mouseX, mouseY, mouseWheel)
    
    // ruote anteriori
    if (key[0]) mozzoA = mozzoA + 0.05; // W
    if (key[1]) mozzoA = mozzoA - 0.05; // A
    if (key[2]) mozzoP = mozzoP + 0.05; // S
    if (key[3]) mozzoP = mozzoP - 0.05; // D
    
    // sterzo
    sterzo = (mouseX - canvas.width/2) / (canvas.width/2);
}

//-------------------FUNZIONE DO PHYSICS-------------------//

function tankDoPhysics(){
    // calcolo fisica
    // (mozzoA, mozzoP, sterzo)
    
    // ruote anteriori
    ruotaA = ruotaA + mozzoA;
    ruotaP = ruotaP + mozzoP;
    
    // sterzo
    ruotaA = ruotaA - sterzo;
    ruotaP = ruotaP + sterzo;
}

//-------------------FUNZIONE DRAW TANK-------------------//

function tankDraw(){
    // disegno il tank
    
    // salvo lo stato del canvas
    ctx.save();
    
    // traslo il canvas
    ctx.translate(canvas.width/2, canvas.height/2);
    
    // ruoto il canvas
    ctx.rotate
    (facing);

    // disegno il tank
    ctx.fillStyle = "rgb(0, 0, 0)";
    ctx.fillRect(-20, -20, 40, 40);

    // ripristino lo stato del canvas
    ctx.restore();

}

//-------------------FUNZIONE DRAW GROUND-------------------//

function groundDraw(){
    // disegno il terreno
    
    // salvo lo stato del canvas
    ctx.save();
    
    // traslo il canvas
    ctx.translate(canvas.width/2, canvas.height/2);
    
    // ruoto il canvas
    ctx.rotate
    (facing);

    // disegno il terreno
    ctx.fillStyle = "rgb(0, 255, 0)";
    ctx.fillRect(-1000, 0, 2000, 1000);

    // ripristino lo stato del canvas
    ctx.restore();

}

//-------------------FUNZIONE INIT-------------------//

function tankInit(){

    // inizializzo il canvas
    canvas = document.getElementById("tankCanvas");
    ctx = canvas.getContext("2d");
    
    // inizializzo gli eventi
    tankInitEvents();
    
    // inizializzo il loop
    tankDoLoop();
}

//-------------------FUNZIONE INIT EVENTS-------------------//

function tankInitEvents(){
    // inizializzo gli eventi

    // tastiera
    window.addEventListener("keydown", tankDoKeyDown, false);
    window.addEventListener("keyup", tankDoKeyUp, false);

    // mouse
    window.addEventListener("mousedown", tankDoMouseDown, false);
    window.addEventListener("mousemove", tankDoMouseMove, false);
    window.addEventListener("mouseup", tankDoMouseUp, false);
    window.addEventListener("mousewheel", tankDoMouseWheel, false);

    // touch
    window.addEventListener("touchstart", tankDoTouchStart, false);
    window.addEventListener("touchmove", tankDoTouchMove, false);
    window.addEventListener("touchend", tankDoTouchEnd, false);
    window.addEventListener("touchcancel", tankDoTouchCancel, false);

    // orientamento
    window.addEventListener("deviceorientation", tankDoOrientation, false);

    // accelerazione
    window.addEventListener("devicemotion", tankDoAcceleration, false);
}

//-------------------FUNZIONE MAIN-------------------//

function tankMain(){
    // inizializzo il gioco
    tankInit();
}

//-------------------MAIN-------------------//

tankMain();

//-------------------FINE-------------------//

//-------------------CAMERA DO STEP-------------------//

function cameraDoStep(){
    // gestione camera
    // (px, py, pz, facing)
    
    // posizione della camera
    cameraX = px;
    cameraY = py;
    cameraZ = pz + 50;
    
    // orientamento della camera
    cameraFacing = facing;
}